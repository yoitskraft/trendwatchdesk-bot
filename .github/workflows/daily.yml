name: TrendWatchDesk Generate (Charts + Posters)

on:
  schedule:
    - cron: "10 7 * * 1,3,5"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade yfinance pillow pandas numpy requests pytz urllib3

      - name: Ensure output folders
        run: |
          mkdir -p output output/charts output/posters
          echo "Output dir: $(pwd)"

      # OPTIONAL: fetch logos / make fallbacks so generation never fails on a missing logo
      - name: Fetch missing logos
        run: |
          if [ -f tools/download_logos.py ]; then
            python tools/download_logos.py || true
          fi

      # ✅ Let main.py decide success/failure via its CI flags
      - name: Generate charts (CI-gated)
        env:
          PYTHONUNBUFFERED: "1"
        run: |
          set -x
          python -u main.py --ci 2>&1 | tee output/run.log

      - name: Generate posters (CI-gated)
        env:
          PYTHONUNBUFFERED: "1"
        run: |
          set -x
          python -u main.py --ci-posters 2>&1 | tee -a output/run.log

      # ✅ Print the correct log file
      - name: Print run.log to console
        if: always()
        run: |
          echo "===== BEGIN output/run.log ====="
          (test -f output/run.log && cat output/run.log) || echo "output/run.log missing"
          echo "===== END output/run.log ====="

      # Helpful visibility
      - name: Show output tree
        if: always()
        run: |
          echo "== output =="
          ls -la output || true
          echo "== output/charts =="
          ls -la output/charts || true
          echo "== output/posters =="
          ls -la output/posters || true
          echo "== captions =="
          ls -la output/caption_* 2>/dev/null || true

      # (PNG counting step no longer required; CI flags already enforce success/fail)
      # Publish outputs to 'charts' branch
      - name: Publish to 'charts' branch (single-commit)
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
        run: |
          set -e
          rm -rf publish && mkdir publish
          cp -r output/* publish/ || true

          cd publish
          git init
          git checkout -b charts
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote add origin "https://x-access-token:${GITHUB_TOKEN}@github.com/${REPO}.git"

          git add -A
          git commit -m "Publish outputs $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
          git push -f origin charts

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: twd-run-${{ github.run_id }}
          path: |
            output/run.log
            output/**
