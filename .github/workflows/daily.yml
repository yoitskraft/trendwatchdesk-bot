name: TrendWatchDesk Generate

on:
  schedule:
    - cron: "10 7 * * 1,3,5"   # Mon/Wed/Fri 07:10 UTC
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Show Python & pip
        run: |
          python --version
          pip --version

      - name: Install baseline deps
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade yfinance pillow pandas numpy requests pytz urllib3

      - name: Install project requirements (optional)
        if: hashFiles('requirements.txt') != ''
        run: |
          pip install -r requirements.txt || true

      - name: Ensure output folder
        run: |
          mkdir -p output
          echo "Output dir:" && pwd && ls -la output || true

      - name: Run bot (tee log)
        run: |
          set -x
          python -u main.py 2>&1 | tee run.log
        env:
          PYTHONUNBUFFERED: "1"

      - name: Print run.log to console
        if: always()
        run: |
          echo "===== BEGIN run.log ====="
          (test -f run.log && tail -n 300 run.log) || echo "run.log missing"
          echo "===== END run.log ====="

      - name: Debug output folder
        if: always()
        run: |
          echo "== output listing =="
          ls -la output || true
          echo "== any pngs =="
          find output -maxdepth 1 -type f -name "*.png" -printf "%f\n" 2>/dev/null || true

      - name: Require charts
        if: always()
        run: |
          set -e
          COUNT=$(find output -maxdepth 1 -type f -name "*.png" 2>/dev/null | wc -l | tr -d ' ')
          echo "PNG count: $COUNT"
          if [ "$COUNT" = "0" ]; then
            echo "::error::No charts generated. Check run.log above for errors."
            exit 1
          fi

      # ---- Publish ONLY the generated PNGs to a separate 'charts' branch ----
      
      - name: Publish charts to 'charts' branch (single-commit)
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
        run: |
          set -e
          test -d output
          ls output/*.png >/dev/null 2>&1

          # Build a minimal repo containing only the PNGs to push to 'charts'
          rm -rf publish && mkdir publish
          cp -r output/* publish/

          cd publish
          git init
          git checkout -b charts
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Use the workflow token so push works non-interactively
          git remote add origin "https://x-access-token:${GITHUB_TOKEN}@github.com/${REPO}.git"

          git add -A
          git commit -m "Publish charts $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
          git push -f origin charts
      # Keep artifacts (logs + PNGs) for easy download from Actions
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: debug-${{ github.run_id }}
          path: |
            run.log
            output/**
