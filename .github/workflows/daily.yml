name: TrendWatchDesk Generate

on:
  schedule:
    - cron: "10 7 * * 1,3,5"   # Mon/Wed/Fri 07:10 UTC
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Show Python & pip
        run: |
          python --version
          pip --version

      # Always install baseline deps (keeps yfinance available)
      - name: Install baseline deps
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade yfinance pillow pandas numpy requests pytz urllib3

      # Optionally install your requirements.txt (won't fail the job if it's missing)
      - name: Install project requirements (optional)
        if: hashFiles('requirements.txt') != ''
        run: |
          pip install -r requirements.txt || true

      - name: Ensure output folder
        run: |
          mkdir -p output
          echo "Output dir:" && pwd && ls -la output || true

      - name: Run bot (tee log)
        run: |
          set -x
          python -u main.py 2>&1 | tee run.log
        env:
          PYTHONUNBUFFERED: "1"

      - name: Print run.log to console
        if: always()
        run: |
          echo "===== BEGIN run.log ====="
          (test -f run.log && tail -n 300 run.log) || echo "run.log missing"
          echo "===== END run.log ====="

      - name: Debug output folder
        if: always()
        run: |
          echo "== output listing =="
          ls -la output || true
          echo "== any pngs =="
          find output -maxdepth 1 -type f -name "*.png" -printf "%f\n" 2>/dev/null || true

      - name: Require charts
        if: always()
        run: |
          set -e
          COUNT=$(find output -maxdepth 1 -type f -name "*.png" 2>/dev/null | wc -l | tr -d ' ')
          echo "PNG count: $COUNT"
          if [ "$COUNT" = "0" ]; then
            echo "::error::No charts generated. Check run.log above for errors."
            exit 1
          fi

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: debug-${{ github.run_id }}
          path: |
            run.log
            output/**
