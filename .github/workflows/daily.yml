name: TrendWatchDesk Generate

on:
  schedule:
    - cron: "10 7 * * 1,3,5"   # Mon/Wed/Fri 07:10 UTC
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Show Python & pip
        run: |
          python --version
          pip --version

      - name: Install dependencies
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else:
            pip install pillow pandas numpy requests yfinance pytz urllib3
          fi

      - name: Debug assets (logos/brand)
        run: |
          echo "== assets =="
          ls -la assets || true
          echo "== assets/logos =="
          ls -la assets/logos || true
          echo "== brand logo candidates =="
          ls -la assets/brand_logo.png assets/logo.png || true

      - name: Probe Yahoo 4H (AAPL)
        run: |
          python - << 'PY'
          import yfinance as yf, sys
          try:
              df = yf.download("AAPL", period="10d", interval="4h", progress=False)
              print("Probe rows:", 0 if df is None else len(df))
              print(df.tail(3))
              sys.exit(0 if df is not None and len(df)>0 else 2)
          except Exception as e:
              print("Probe failed:", e)
              sys.exit(3)
          PY

      - name: Ensure output folder
        run: mkdir -p output

      - name: Run bot
        run: |
          set -x
          python main.py | tee run.log
        env:
          PYTHONUNBUFFERED: "1"

      - name: Debug output folder
        if: always()
        run: |
          echo "== output listing =="
          ls -la output || true
          echo "== any pngs =="
          find output -maxdepth 1 -type f -name "*.png" -printf "%f\n" 2>/dev/null || true

      - name: Require charts
        if: always()
        run: |
          set -e
          COUNT=$(find output -maxdepth 1 -type f -name "*.png" 2>/dev/null | wc -l | tr -d ' ')
          echo "PNG count: $COUNT"
          if [ "$COUNT" = "0" ]; then
            echo "::error::No charts generated. Check previous steps:"
            echo " - If the Yahoo 4H probe failed, yfinance/data access is the issue."
            echo " - If main.py printed '[warn] no data for ...', your fetch functions returned None."
            echo " - If errors printed per ticker, inspect run.log artifact."
            exit 1
          fi

      - name: Upload charts
        uses: actions/upload-artifact@v4
        with:
          name: charts-${{ github.run_id }}
          path: output/*.png
          if-no-files-found: warn

      - name: Upload logs and output folder
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: debug-${{ github.run_id }}
          path: |
            run.log
            output/**
