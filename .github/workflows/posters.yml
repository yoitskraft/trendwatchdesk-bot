name: TWD Breaking Posters (event-driven)

on:
  schedule:
    - cron: "*/10 * * * *"   # every 10 minutes UTC
  workflow_dispatch:

jobs:
  breaking_posters:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout default branch
        uses: actions/checkout@v4

      # Restore prior seen state from 'posters' branch (for dedupe & cooldown)
      - name: Restore state from posters branch
        run: |
          git fetch origin posters || true
          mkdir -p state
          if git show origin/posters:seen_stories.json > state/seen_stories.json 2>/dev/null; then
            echo "Restored state/seen_stories.json"
          else
            echo "No prior state found."
          fi

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade yfinance pillow pandas numpy requests pytz urllib3

      - name: Ensure output dirs
        run: |
          mkdir -p output/posters

      - name: Run breaking-poster mode
        env:
          PYTHONUNBUFFERED: "1"
          TWD_MODE: "posters"
          TWD_BREAKING_ON: "on"
          TWD_BREAKING_RECENCY_MIN: "90"        # look back 90 min for fresh news
          TWD_BREAKING_MIN_SOURCES: "3"         # require 3+ distinct publishers
          TWD_BREAKING_MIN_INTERVAL_MIN: "30"   # cooldown to avoid spam
        run: |
          set -x
          python -u main.py 2>&1 | tee run.log

      - name: Print log
        if: always()
        run: |
          echo "===== BEGIN run.log ====="
          (test -f run.log && tail -n 400 run.log) || echo "run.log missing"
          echo "===== END run.log ====="

      - name: Publish posters & state to 'posters' branch
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
        run: |
          set -e
          rm -rf publish && mkdir -p publish
          cp -r output/posters/*.png publish/ 2>/dev/null || true
          cp -r state/seen_stories.json publish/ 2>/dev/null || true
          if [ -z "$(ls -A publish 2>/dev/null)" ]; then
            echo "keep" > publish/.keep
          fi

          cd publish
          git init
          git checkout -b posters
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote add origin "https://x-access-token:${GITHUB_TOKEN}@github.com/${REPO}.git"

          git add -A
          git commit -m "Breaking posters $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
          git push -f origin posters

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: breaking-posters-${{ github.run_id }}
          path: |
            run.log
            output/**
            state/seen_stories.json
